/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.DTBgiamDanComparator;
import controller.DTBtangDanComparator;
import controller.DataImp;
import controller.HoComparator;
import controller.MSVComparator;
import controller.TenComparator;
import java.io.BufferedOutputStream;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;
import model.DsMonHoc;
import model.SinhVien;
import java.io.FileWriter;
import javax.swing.JTable;

/**
 *
 * @author LaptopDT
 */
public class HomeFrm extends javax.swing.JFrame implements View {
    
    private static final String currentDir = System.getProperty("user.dir");
    private static final String separator = File.separator;
    private static final String fileData = currentDir + separator + "data" + separator + "FileSV.json";
    
    private int selectedIndex;
    private List<SinhVien> listSV;
    private List<SinhVien> listDiem;
    private DefaultTableModel modelDiem;
    private DefaultTableModel modelSV;
    private DataImp data;
    
    public HomeFrm() {
        initComponents();
        this.setLocationRelativeTo(null);
        listSV = new ArrayList<>();
        modelSV = (DefaultTableModel) tblSinhVien.getModel();
        listDiem = new ArrayList<>();
        modelDiem = (DefaultTableModel) tblDiemMH.getModel();
        data = new DataImp();
        showSV();
        showDiem();
    }
    
    public List<SinhVien> getListSV() {
        return listSV;
    }
    
    public List<SinhVien> getListDiem() {
        return listDiem;
    }
    
    public void addSinhVien(SinhVien s) {
        listSV.add(s);
        this.showDataSV(listSV, modelSV);
        data.WriteFileJson(listSV, fileData);
    }
    
    void updateSinhVien(SinhVien sv) {
        int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn sửa thông tin không?", "Hỏi",
                JOptionPane.YES_NO_OPTION);
        if (choice == JOptionPane.YES_OPTION) {
            listSV.remove(selectedIndex);// xóa bỏ thằng cũ
            this.addSinhVien(sv);
            JOptionPane.showMessageDialog(rootPane, "Sửa thành công");
        } else if (choice == JOptionPane.NO_OPTION) {
            return;
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblSinhVien = new javax.swing.JTable();
        btnEdit = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtDuLieu = new javax.swing.JTextField();
        btnRefreshSV = new javax.swing.JButton();
        cobomSX = new javax.swing.JComboBox<>();
        combo_AddSV = new javax.swing.JComboBox<>();
        btn_Remove = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDiemMH = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        txtData = new javax.swing.JTextField();
        btn_Update = new javax.swing.JButton();
        btn_RefreshDiem = new javax.swing.JButton();
        btn_SearchDiem = new javax.swing.JButton();
        comboFilter_HocLuc = new javax.swing.JComboBox<>();
        comboSort = new javax.swing.JComboBox<>();
        jButton5 = new javax.swing.JButton();
        btn_FilterHOCPHAN = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jTabbedPane3 = new javax.swing.JTabbedPane();
        jTabbedPane4 = new javax.swing.JTabbedPane();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblSinhVien.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Sinh Viên", "Họ tên", "Lớp niên chế", "Ngày sinh", "Quê quán"
            }
        ));
        tblSinhVien.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSinhVienMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblSinhVien);

        btnEdit.setIcon(new javax.swing.ImageIcon("C:\\Users\\LaptopDT\\Downloads\\iconset4\\Actions-document-edit-icon-16.png")); // NOI18N
        btnEdit.setText("Sửa sinh viên");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnSearch.setIcon(new javax.swing.ImageIcon("C:\\Users\\LaptopDT\\Downloads\\iconset4\\search-icon-16.png")); // NOI18N
        btnSearch.setText("Tìm kiếm");
        btnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchActionPerformed(evt);
            }
        });

        jLabel1.setText("Nhập:");

        btnRefreshSV.setText("Refresh");
        btnRefreshSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshSVActionPerformed(evt);
            }
        });

        cobomSX.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sắp xếp theo MSV", "Sắp xếp theo tên", "Sắp xếp theo họ", " " }));
        cobomSX.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cobomSXActionPerformed(evt);
            }
        });

        combo_AddSV.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Thêm SV khoa ATTT", "Thêm SV khoa CNTT", "Thêm SV khoa DTVT" }));
        combo_AddSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_AddSVActionPerformed(evt);
            }
        });

        btn_Remove.setIcon(new javax.swing.ImageIcon("C:\\Users\\LaptopDT\\Downloads\\iconset4\\Actions-edit-delete-icon-16.png")); // NOI18N
        btn_Remove.setText("Xóa");
        btn_Remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RemoveActionPerformed(evt);
            }
        });

        jButton6.setIcon(new javax.swing.ImageIcon("C:\\Users\\LaptopDT\\Downloads\\iconset4\\Save-icon.png")); // NOI18N
        jButton6.setText("Export File");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtDuLieu, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cobomSX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(55, 55, 55)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(combo_AddSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_Remove, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnRefreshSV)
                        .addContainerGap(259, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton6, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(44, 44, 44))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 17, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtDuLieu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btn_Remove, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnEdit)
                        .addComponent(jButton6)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnRefreshSV, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combo_AddSV, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cobomSX, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(156, 156, 156))
        );

        jTabbedPane1.addTab("QUẢN LÝ SINH VIÊN", jPanel1);

        tblDiemMH.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "Mã Sinh Viên", "Họ tên", "Lớp niên chế", "Điểm trung bình"
            }
        ));
        jScrollPane2.setViewportView(tblDiemMH);

        jLabel2.setText("Nhập:");

        btn_Update.setIcon(new javax.swing.ImageIcon("C:\\Users\\LaptopDT\\Downloads\\iconset4\\Actions-document-edit-icon-32.png")); // NOI18N
        btn_Update.setText("Cập nhật dữ liệu");
        btn_Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_UpdateActionPerformed(evt);
            }
        });

        btn_RefreshDiem.setText("Refresh");
        btn_RefreshDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_RefreshDiemActionPerformed(evt);
            }
        });

        btn_SearchDiem.setIcon(new javax.swing.ImageIcon("C:\\Users\\LaptopDT\\Downloads\\iconset4\\search-icon-16.png")); // NOI18N
        btn_SearchDiem.setText("Tìm kiếm");
        btn_SearchDiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_SearchDiemActionPerformed(evt);
            }
        });

        comboFilter_HocLuc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Lọc top SV loại Giỏi", "Lọc top SV loại Khá", "Lọc top SV loại Trung Bình", "Lọc top SV loại yếu" }));
        comboFilter_HocLuc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboFilter_HocLucActionPerformed(evt);
            }
        });

        comboSort.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sắp xếp theo MSV", "Sắp xếp theo GPA tăng dần", "Sắp xếp theo GPA giảm dần" }));
        comboSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboSortActionPerformed(evt);
            }
        });

        jButton5.setIcon(new javax.swing.ImageIcon("C:\\Users\\LaptopDT\\Downloads\\iconset4\\Save-icon.png")); // NOI18N
        jButton5.setText("Export File");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        btn_FilterHOCPHAN.setText("Lọc SV theo lớp học phần");
        btn_FilterHOCPHAN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_FilterHOCPHANActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(202, 202, 202)
                        .addComponent(btn_Update, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_SearchDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(btn_RefreshDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(113, 113, 113)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(btn_FilterHOCPHAN, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addComponent(comboFilter_HocLuc, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 66, Short.MAX_VALUE)
                        .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 296, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btn_RefreshDiem, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btn_Update, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(13, 13, 13)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtData, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_SearchDiem)
                    .addComponent(btn_FilterHOCPHAN)
                    .addComponent(comboFilter_HocLuc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboSort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(151, 151, 151))
        );

        jTabbedPane1.addTab("QUẢN LÝ ĐIỂM", jPanel2);
        jTabbedPane1.addTab("ATTT", jTabbedPane2);
        jTabbedPane1.addTab("CNTT", jTabbedPane3);
        jTabbedPane1.addTab("DTVT", jTabbedPane4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_FilterHOCPHANActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_FilterHOCPHANActionPerformed
        listDiem = data.ReadFileJson(fileData);
        String dl = txtData.getText();
        if (dl.length() > 0) {
            List<SinhVien> list = new ArrayList<>();
            for (SinhVien s : listDiem) {
                for (DsMonHoc m : s.getDsMonHoc()) {
                    if (m.getTenMonHoc().equalsIgnoreCase(dl)) {
                        list.add(s);
                    }
                }
            }
            listDiem.clear();
            listDiem.addAll(list);
            showDataDiem(listDiem, modelDiem);
        } else {
            JOptionPane.showMessageDialog(rootPane, "Xin nhập tên lớp học phần!");
        }
    }//GEN-LAST:event_btn_FilterHOCPHANActionPerformed

    private void comboSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboSortActionPerformed
        int index = comboSort.getSelectedIndex();
        if (index == 0) {
            listDiem.sort(new MSVComparator());
        } else if (index == 1) {
            listDiem.sort(new DTBtangDanComparator().thenComparing(new MSVComparator()));
        } else if (index == 2) {
            listDiem.sort(new DTBgiamDanComparator().thenComparing(new MSVComparator()));
        }
        showDataDiem(listDiem, modelDiem);
    }//GEN-LAST:event_comboSortActionPerformed

    private void comboFilter_HocLucActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboFilter_HocLucActionPerformed
        int index = comboFilter_HocLuc.getSelectedIndex();
        List<SinhVien> listHocLuc = new ArrayList<>();
        if (index == 0) {
            for (SinhVien sv : listDiem) {
                if (sv.getDTB() >= 9) {
                    listHocLuc.add(sv);
                }
            }
        } else if (index == 1) {
            for (SinhVien sv1 : listDiem) {
                if (sv1.getDTB() >= 7 && sv1.getDTB() < 9) {
                    listHocLuc.add(sv1);
                }
            }
        } else if (index == 2) {
            for (SinhVien sv2 : listDiem) {
                if (sv2.getDTB() >= 4 && sv2.getDTB() < 7) {
                    listHocLuc.add(sv2);
                }
            }
        } else if (index == 3) {
            for (SinhVien sv3 : listDiem) {
                if (sv3.getDTB() < 4) {
                    listHocLuc.add(sv3);
                }
            }
        }
        listDiem.clear();
        listDiem.addAll(listHocLuc);
        showDataDiem(listDiem, modelDiem);
    }//GEN-LAST:event_comboFilter_HocLucActionPerformed

    private void btn_SearchDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_SearchDiemActionPerformed
        String dulieu = txtData.getText();
        if (dulieu.length() > 0) {
            List<SinhVien> listDSearch = new ArrayList<>();// tạo ra 1 bộ đệm để lấy data tạm thời sang bộ đệm sau đó quay lại copy sang bộ nhớ chính
            for (SinhVien a : listDiem) {// tìm trong danh sách fileData
                String[] name = a.getHoTen().split(" ");
                if (a.getMaSV().equalsIgnoreCase(dulieu)) {
                    listDSearch.add(a);// lưu vào listSearch
                } else if (a.getTenLopNC().equalsIgnoreCase(dulieu)) {
                    listDSearch.add(a);
                } else if (name[name.length - 1].equalsIgnoreCase(dulieu)) {
                    listDSearch.add(a);
                }
            }
            listDiem.clear();// XÓA hết nội dung đi
            listDiem.addAll(listDSearch);// sau đó cập nhật lại
            if (listDSearch.size() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy sinh viên!");
            } else {
                showDataDiem(listDiem, modelDiem);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập vào MSV, tên, lớp niên chế!");
        }
    }//GEN-LAST:event_btn_SearchDiemActionPerformed

    private void btn_RefreshDiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RefreshDiemActionPerformed
        listDiem.clear();
        listDiem.addAll(getListDiem());
        this.showDiem();
    }//GEN-LAST:event_btn_RefreshDiemActionPerformed

    private void btn_UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_UpdateActionPerformed
        listDiem.clear();
        listDiem.addAll(getListDiem());
        this.showDiem();
    }//GEN-LAST:event_btn_UpdateActionPerformed

    private void btn_RemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_RemoveActionPerformed
        int removeIndex = tblSinhVien.getSelectedRow();
        if (removeIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn 1 dòng rồi ấn Xóa!");
        } else if (listSV.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin để Xóa!");
        } else {
            int choice = JOptionPane.showConfirmDialog(this, "Bạn có muốn xóa thông tin không?", "Hỏi",
                    JOptionPane.YES_NO_OPTION);
            if (choice == JOptionPane.NO_OPTION) {
                return;
            }
            listSV.remove(removeIndex);
            data.WriteFileJson(listSV, fileData);
            showDataSV(listSV, modelSV);
        }
    }//GEN-LAST:event_btn_RemoveActionPerformed

    private void combo_AddSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_AddSVActionPerformed
        int index = combo_AddSV.getSelectedIndex();
        if (index == 0) {
            new AddSinhVienATTT(this, rootPaneCheckingEnabled).setVisible(true);
        } else if (index == 1) {
            new AddSinhVienCNTT(this, rootPaneCheckingEnabled).setVisible(true);
        } else if (index == 2) {
            new AddSinhVienDTVT(this, rootPaneCheckingEnabled).setVisible(true);
        }
    }//GEN-LAST:event_combo_AddSVActionPerformed

    private void cobomSXActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cobomSXActionPerformed
        int index = cobomSX.getSelectedIndex();
        if (index == 0) {
            listSV.sort(new MSVComparator());
        } else if (index == 1) {
            listSV.sort(new TenComparator().thenComparing(new MSVComparator()));
        } else if (index == 2) {
            listSV.sort(new HoComparator().thenComparing(new TenComparator()).thenComparing(new MSVComparator()));
        }
        showDataSV(listSV, modelSV);
    }//GEN-LAST:event_cobomSXActionPerformed

    private void btnRefreshSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshSVActionPerformed
        listSV.clear();
        listSV.addAll(getListSV());
        this.showSV();
    }//GEN-LAST:event_btnRefreshSVActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        String dulieu = txtDuLieu.getText();
        if (dulieu.length() > 0) {
            List<SinhVien> listSVSearch = new ArrayList<>();// tạo ra 1 bộ đệm để lấy data tạm thời sang bộ đệm sau đó quay lại copy sang bộ nhớ chính
            for (SinhVien a : listSV) {// tìm trong danh sách fileData
                String[] name = a.getHoTen().split(" ");
                if (a.getMaSV().equalsIgnoreCase(dulieu)) {
                    listSVSearch.add(a);// lưu vào listSearch
                } else if (a.getTenLopNC().equalsIgnoreCase(dulieu)) {
                    listSVSearch.add(a);
                } else if (name[name.length - 1].equalsIgnoreCase(dulieu)) {
                    listSVSearch.add(a);
                } else if (a.getQueQuan().equalsIgnoreCase(dulieu)) {
                    listSVSearch.add(a);
                }
            }
            listSV.clear();// XÓA hết nội dung đi
            listSV.addAll(listSVSearch);// sau đó cập nhật lại
            if (listSVSearch.size() == 0) {
                JOptionPane.showMessageDialog(rootPane, "Không tìm thấy sinh viên!");
                
            } else {
                showDataSV(listSV, modelSV);
            }
        } else {
            JOptionPane.showMessageDialog(rootPane, "Vui lòng nhập vào MSV, tên, lớp niên chế hoặc quê quán!");
        }
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        selectedIndex = tblSinhVien.getSelectedRow();
        if (selectedIndex == -1) {
            JOptionPane.showMessageDialog(rootPane, "Hãy chọn 1 dòng rồi ấn Sửa!");
        } else if (listSV.size() == 0) {
            JOptionPane.showMessageDialog(rootPane, "Không có thông tin để Sửa!");
        } else {
            if (listSV.get(selectedIndex).getMaSV().charAt(0) == 'C' || listSV.get(selectedIndex).getMaSV().charAt(0) == 'c') {
                EditSinhVienCNTT edit = new EditSinhVienCNTT(this, rootPaneCheckingEnabled);
                edit.setEditDataCNTT(listSV.get(selectedIndex));
                edit.setVisible(true);
            } else if (listSV.get(selectedIndex).getMaSV().charAt(0) == 'A' || listSV.get(selectedIndex).getMaSV().charAt(0) == 'a') {
                EditSinhVienATTT editat = new EditSinhVienATTT(this, rootPaneCheckingEnabled);
                editat.setEditDataATTT(listSV.get(selectedIndex));
                editat.setVisible(true);
            } else if (listSV.get(selectedIndex).getMaSV().charAt(0) == 'D' || listSV.get(selectedIndex).getMaSV().charAt(0) == 'd') {
                EditSinhVienDTVT editdt = new EditSinhVienDTVT(this, rootPaneCheckingEnabled);
                editdt.setEditDataDTVT(listSV.get(selectedIndex));
                editdt.setVisible(true);
            }

            //            else {
            //                JOptionPane.showMessageDialog(rootPane, "Bạn phải ấn vào dòng có MSV ngành CNTT. Ví dụ: C040135");
            //            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void tblSinhVienMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSinhVienMouseClicked

    }//GEN-LAST:event_tblSinhVienMouseClicked

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
//        FileOutputStream excelFOU = null;
//        BufferedOutputStream excelBOU = null;
//        XSSFWorkbook excelJTableExporter = null;
//
//        // Choose location for saving excel file
//        JFileChooser excelFileChooser = new JFileChooser();
//        // change dilog box title: thay doi tieu de hop thoai
//        excelFileChooser.setDialogTitle("Save As");
//        // only  filter files with these extensions "xls","xlsx,..
//        FileNameExtensionFilter fnef = new FileNameExtensionFilter("EXCEL FILES", "xls", "xlsx", "xlsm", "csv");
//        excelFileChooser.setFileFilter(fnef);
//        excelFileChooser.showSaveDialog(null);// hiển thị cửa sổ lưu
//        int excelChooser = excelFileChooser.showSaveDialog(null);
//
//        //check if save button is clicked: kiểm tra xem nút lưu có được nhấp không
//        if (excelChooser == JFileChooser.APPROVE_OPTION) {
//            try {
//                // IMPORT excel poi libraries to netbeans
//                // search google is link: https://poi.apache.org/
//                excelJTableExporter = new XSSFWorkbook();
//                XSSFSheet excelSheet = excelJTableExporter.createSheet("JTable Sheet");
//                // loop to get jtable columns and rows:vòng lặp để nhận các cột và hàng jtable
//                for (int i = 0; i < modelSV.getRowCount(); i++) {
//                    XSSFRow excelRow = excelSheet.createRow(i);
//                    for (int j = 0; j < modelSV.getColumnCount(); j++) {
//                        XSSFCell excelCell = excelRow.createCell(j);
//                        excelCell.setCellValue(modelSV.getValueAt(i, j).toString());
//                    }
//                }   //append xlsx file extensions to selected files. to create unque files name
//                excelFOU = new FileOutputStream(excelFileChooser.getSelectedFile() + ".xlsx");
//                excelBOU = new BufferedOutputStream(excelFOU);
//                excelJTableExporter.write(excelBOU);
//                JOptionPane.showMessageDialog(null, "Export Succesfully!!!");
//                // change error output. vao Tools->options->editor                     
//                //->hint-> search error fixes-> surround with try-catch-> bo dau use org...
//            } catch (FileNotFoundException ex) {
//                Logger.getLogger(HomeFrm.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (IOException ex) {
//                Logger.getLogger(HomeFrm.class.getName()).log(Level.SEVERE, null, ex);
//            } finally {
//                try {
//                    if (excelFOU != null) {
//                        excelFOU.close();
//                    }
//                    if (excelBOU != null) {
//                        excelBOU.close();
//                    }
//                    if (excelJTableExporter != null) {
//                        excelJTableExporter.close();
//                    }
//                } catch (IOException ex) {
//                    Logger.getLogger(HomeFrm.class.getName()).log(Level.SEVERE, null, ex);
//                }
//            }
//        }

//        JFileChooser chooser = new JFileChooser();
//        int i = chooser.showSaveDialog(chooser);// hiển thị cửa sổ lưu
//        if (i == JFileChooser.APPROVE_OPTION) {
//            File file = chooser.getSelectedFile();
//            try {
//                FileWriter out = new FileWriter(file + ".xls");
//                BufferedWriter bwrite = new BufferedWriter(out);
//                DefaultTableModel model = (DefaultTableModel) tblSinhVien.getModel();
//                // ten Cot
//                for (int j = 0; j < tblSinhVien.getColumnCount(); j++) {
//                    bwrite.write(model.getColumnName(j) + "\t");
//                }
//                bwrite.write("\n");
//                // Lay du lieu dong
//                for (int j = 0; j < tblSinhVien.getRowCount(); j++) {
//                    for (int k = 0; k < tblSinhVien.getColumnCount(); k++) {
//                        bwrite.write(model.getValueAt(j, k) + "\t");
//                    }
//                    bwrite.write("\n");
//                }
//                bwrite.close();
//                JOptionPane.showMessageDialog(null, "Lưu file thành công!");
//            } catch (Exception e2) {
//                JOptionPane.showMessageDialog(null, "Lỗi khi lưu file!");
//            }
//        }
        exportFile(tblSinhVien, modelSV);
    }//GEN-LAST:event_jButton6ActionPerformed
    
    public void exportFile(JTable table, DefaultTableModel model) {
        JFileChooser chooser = new JFileChooser();
        int i = chooser.showSaveDialog(chooser);// hiển thị cửa sổ lưu
        if (i == JFileChooser.APPROVE_OPTION) {
            File file = chooser.getSelectedFile();
            try {
                FileWriter output = new FileWriter(file + ".xls");
                BufferedWriter bw = new BufferedWriter(output);
                //modelSV = (DefaultTableModel) tblSinhVien.getModel();
                model = (DefaultTableModel) table.getModel();
                // ten cot
                for (int j = 0; j < table.getColumnCount(); j++) {
                    bw.write(model.getColumnName(j) + "\t");
                }
                bw.write("\n");
                // lay du lieu dong
                for (int j = 0; j < table.getRowCount(); j++) {
                    for (int k = 0; k < table.getColumnCount(); k++) {
                        bw.write(model.getValueAt(j, k) + "\t");
                    }
                    bw.write("\n");
                }
                bw.close();
                JOptionPane.showMessageDialog(null, "Lưu file thành công!");
            } catch (IOException ex) {
                Logger.getLogger(HomeFrm.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(null, "Lỗi khi lưu file!");
            }
        }
        
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        exportFile(tblDiemMH, modelDiem);
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeFrm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeFrm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnRefreshSV;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btn_FilterHOCPHAN;
    private javax.swing.JButton btn_RefreshDiem;
    private javax.swing.JButton btn_Remove;
    private javax.swing.JButton btn_SearchDiem;
    private javax.swing.JButton btn_Update;
    private javax.swing.JComboBox<String> cobomSX;
    private javax.swing.JComboBox<String> comboFilter_HocLuc;
    private javax.swing.JComboBox<String> comboSort;
    private javax.swing.JComboBox<String> combo_AddSV;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JTabbedPane jTabbedPane3;
    private javax.swing.JTabbedPane jTabbedPane4;
    private javax.swing.JTable tblDiemMH;
    private javax.swing.JTable tblSinhVien;
    private javax.swing.JTextField txtData;
    private javax.swing.JTextField txtDuLieu;
    // End of variables declaration//GEN-END:variables

    @Override
    public void showDataSV(List<SinhVien> list, DefaultTableModel model) {
        int i = 1;
        model.setRowCount(0);
        for (SinhVien s : list) {
            model.addRow(new Object[]{
                i++, s.getMaSV(), s.getHoTen(), s.getTenLopNC(), s.getNgaySinh(), s.getQueQuan()
            });
            
        }
    }
    
    private void showSV() {
//        listSV = controller.readDataFromFile(fileData);
        listSV = data.ReadFileJson(fileData);
        this.showDataSV(listSV, modelSV);
    }
    
    @Override
    public void showDataDiem(List<SinhVien> list, DefaultTableModel model) {
        int i = 1;
        double diem = 0;
        int tinchi = 0;
        model.setRowCount(0);
        for (SinhVien s : list) {
            String diemTB = String.format("%.2f", s.getDTB());
            model.addRow(new Object[]{
                i++, s.getMaSV(), s.getHoTen(), s.getTenLopNC(), diemTB
            });
        }
    }
    
    private void showDiem() {
        listDiem = data.ReadFileJson(fileData);
        this.showDataDiem(listDiem, modelDiem);
    }
    
}
